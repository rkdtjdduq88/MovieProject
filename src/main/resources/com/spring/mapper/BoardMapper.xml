<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.movie.mapper.BoardMapper">
	
	<!-- 블로그 리스트 출력 -->
	<select id="getBoardList"
		parameterType="com.project.movie.domain.BoardDTO"
		resultType="com.project.movie.domain.BoardDTO">
		SELECT bno, title, content, attach, regdate, updateddate,
		re_ref, re_lev, re_seq, cnt, userid FROM movieboard_tbl ORDER BY
		bno DESC
	</select>

	<!-- 블로그 상세 정보 -->
	<select id="getBlogDetails"
		resultType="com.project.movie.domain.BoardDTO">
		SELECT * FROM movieboard_tbl WHERE bno = #{bno}
	</select>

	<resultMap id="commentResultMap"
		type="com.project.movie.domain.BlogCommentDTO">
		<id property="bno" column="bno" />
		<id property="rno" column="rno" />
		<result property="replyContent" column="replycontent" />
		<result property="userid" column="userid" />
		<result property="replyDate" column="replydate" />
		<result property="replyUpdateDate" column="replyupdatedate" />

		<!-- blog 댓글 -->
	</resultMap>
<insert id="insertComment" parameterType="com.project.movie.domain.BlogCommentDTO">
    <selectKey keyProperty="rno" resultType="int" order="BEFORE">
        SELECT rno_seq.nextval FROM dual
    </selectKey>
    INSERT INTO movieboardreply_tbl (bno, rno, replycontent, userid, replydate, replyupdatedate)
    VALUES (#{bno}, #{rno}, #{replyContent}, #{userid}, sysdate, sysdate)
</insert>



	<select id="getComment" parameterType="int"
		resultMap="commentResultMap">
		SELECT bno, rno, replycontent, userid, replydate, replyupdatedate
		FROM movieboardreply_tbl
		WHERE rno = #{rno}
	</select>

	<select id="getCommentsByBoard" parameterType="int"
		resultMap="commentResultMap">
		SELECT bno, rno, replycontent, userid, replydate, replyupdatedate
		FROM movieboardreply_tbl
		WHERE bno = #{bno}
		ORDER BY replydate
	</select>

	<update id="updateComment"
		parameterType="com.project.movie.domain.BoardDTO">
		UPDATE movieboardreply_tbl
		SET replycontent = #{replyContent}, replyupdatedate = #{replyUpdateDate}
		WHERE rno = #{rno}
	</update>

	<delete id="deleteComment" parameterType="int">
		DELETE FROM movieboardreply_tbl
		WHERE rno = #{rno}
	</delete>
     <!-- 댓글 끝--> 
     
     <!--  페이지나누기 시작-->
       
    <!-- 게시글 수 카운팅 -->
   <select id="getBlogCount" parameterType="com.project.movie.domain.DetailPageDTO" resultType="int">
    SELECT COUNT(*) FROM movieboard_tbl
	</select>
   <!-- 페이지당 게시글 수  -->
 <select id="getBoardListByPage" resultType="com.project.movie.domain.BoardDTO">
    SELECT *
    FROM movieboard_tbl
    ORDER BY bno DESC
    OFFSET #{offset} ROWS FETCH NEXT #{recordSize} ROWS ONLY
</select>

	<!-- 회원가입  -->
	<insert id="insert">
		insert into moviemember_tbl(userid,password,email,address,name,mobile)
		values(#{userid},#{password},#{email},#{address},#{name},#{mobile})
	</insert>
	
	<!-- 로그인  -->
	 <select id="getMemberByUserId" resultType="com.project.movie.domain.MemberDTO">
        SELECT * FROM moviemember_tbl WHERE userid = #{userid}
    </select>
</mapper>
